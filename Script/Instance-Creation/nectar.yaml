---
- hosts: localhost
  vars_files:
    - host_vars/nectar.yaml
  gather_facts: true

  roles:
    - role: common
    - role: images
    - role: volume
    - role: security-groups
    - role: instance
    - role: snapshot
  tasks: 
    - name: Grap the ip addresses from new-built instances
      set_fact:
        ip_facts: "{{ip_facts|default([]) + [{'name': item.openstack.name, 'address': item.openstack.public_v4}]}}"
      loop: '{{ os_instance.results}}'
      when: item.openstack is defined
    - debug: var=ip_facts # ip_facts will be a list, containing 2 or 3 dictionaries(depending on the number of instances.)
    # - debug: var=


    # - name: Store dynamic ip into local storage.
    #   copy: content="{{item.address}}" dest=/Users/Apple/Documents/Google-Sync/Cluster-and-Cloud-Computing/Project2/Script/test_ip.txt
    #   loop: '{{ip_facts}}'
    - name: Pause and wait for instance creation 
      pause: 
        seconds: 60

    - name: Wait for SSH connection to instances
      command: >
        ssh ubuntu@'{{item.address}}'
      loop: '{{ip_facts}}'
      loop_control:
        index_var: ins_index

    - name: Add dynamic hosts into inventory
      add_host: >
        name=dbserver groups=dbservers >
        ansible_host={{ip_facts[0].address}}
    - name: Add dynamic hosts into inventory
      add_host: >
        name=webserver groups=webservers >
        ansible_host={{ip_facts[1].address}}
    - name: 
    - name: Attach volume to the existing server. 
      os_server_volume:
        state: present
        server: dbserver
        volume: '{{item.vol_name}}'
        device: /dev/vdb
      loop: '{{existing_volume}}'
        
  
# The importing of the playbook Set-Common-Env is working as Expected. 
# However, This playbook causes trouble: 
# 1. When trying to get the dynamic ip addres of the newly created instances, 
# It seems that it would be hard to modify the local /Set-Common-Env/hosts file. This modification is feasible though(I mean through t)

# - import_playbook: /Users/Apple/Documents/Google-Sync/Cluster-and-Cloud-Computing/Project2/Script/Set-Common-Env/set-env.yaml

# This should be fixed. 
- hosts: dbserver
  vars_files:
    - host_vars/nectar.yaml
  roles: 
    - role: env-setup

  # 这里报错了 volume 沾不上去. 报的错是auth_...可是Auth文件不是已经提供了么
  # 难道说auth会随着主机变化消失? 
  # Attach volume to an existing server will need an openstacksdk installed, which is done in env-setup. 
  # tasks: 
  #   - name: Attach Volumes to instances.
  #     os_server_volume:
  #       state: present
  #       server: dbserver
  #       volume: '{{item.vol_name}}'
  #       device: /dev/vdb   # Not too sure the function of using device. Do i still need to mount it using script? 
  #     loop: '{{existing_volume}}'


- hosts: webserver
  vars_files:
    - host_vars/nectar.yaml
  roles: 
    - role: env-setup
    - role: crawler-setup
    
